name: 🎛️ Orchestrated Data Pipeline

on:
  schedule:
    # Run daily at 2 AM UTC - Complete pipeline (Bronze → Silver)
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_reprocess:
        description: 'Force reprocess all data (reset processed flags)'
        required: false
        default: false
        type: boolean

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
  # ============================================================================
  # JOB 1: BRONZE LAYER - Raw Data Ingestion
  # ============================================================================
  bronze-ingestion:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.bronze-result.outputs.success }}
    steps:
      - name: 🥉 Bronze Layer - Raw Data Ingestion
        id: bronze-result
        run: |
          echo "🥉 Starting Bronze layer processing..."
          echo "🎯 Run type: ${{ github.event_name == 'schedule' && 'scheduled' || 'manual' }}"
          echo "🔄 Force reprocess: ${{ inputs.force_reprocess || 'false' }}"
          
          # Determine processing mode - use manual for force reprocess
          MODE="incremental"
          if [[ "${{ inputs.force_reprocess }}" == "true" ]]; then
            MODE="manual"
            echo "🔄 Using manual mode for force reprocess"
          fi
          
          # Call the ingest_raw_data function
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            -d "{\"mode\": \"$MODE\"}" \
            "$SUPABASE_URL/functions/v1/ingest_raw_data")
          
          echo "Bronze layer response: $RESPONSE"
          
          # Check if successful
          if echo "$RESPONSE" | jq -e '.success == true' > /dev/null; then
            echo "✅ Bronze layer completed successfully"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Bronze layer failed"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  # ============================================================================
  # JOB 2: SILVER LAYER - Tabular Processing
  # ============================================================================
  silver-processing:
    runs-on: ubuntu-latest
    needs: bronze-ingestion
    if: always() && needs.bronze-ingestion.result == 'success'
    outputs:
      success: ${{ steps.silver-result.outputs.success }}
    steps:
      - name: 🥈 Silver Layer - Tabular Processing
        id: silver-result
        run: |
          echo "🥈 Starting Silver layer processing..."
          echo "🎯 Run type: ${{ github.event_name == 'schedule' && 'scheduled' || 'manual' }}"
          echo "🔄 Force reprocess: ${{ inputs.force_reprocess || 'false' }}"
          
          # Build request payload
          PAYLOAD='{"mode": "silver_only"'
          if [[ "${{ inputs.force_reprocess }}" == "true" ]]; then
            PAYLOAD="$PAYLOAD, \"force_reprocess\": true"
            echo "🔄 Force reprocessing enabled"
          fi
          PAYLOAD="$PAYLOAD}"
          
          echo "📤 Request payload: $PAYLOAD"
          
          # Call the process_tabular_data function
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            "$SUPABASE_URL/functions/v1/process_tabular_data")
          
          echo "Silver layer response: $RESPONSE"
          
          # Check if successful
          if echo "$RESPONSE" | jq -e '.success == true' > /dev/null; then
            echo "✅ Silver layer completed successfully"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Silver layer failed"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  # ============================================================================
  # JOB 3: MONITORING & ALERTS
  # ============================================================================
  monitoring:
    runs-on: ubuntu-latest
    needs: [bronze-ingestion, silver-processing]
    if: always()
    steps:
      - name: 📊 Pipeline Monitoring
        run: |
          echo "📊 Full Pipeline Status Summary:"
          echo "🎯 Run type: ${{ github.event_name == 'schedule' && 'scheduled' || 'manual' }}"
          echo "🔄 Force reprocess: ${{ inputs.force_reprocess || 'false' }}"
          echo ""
          echo "Bronze Layer: ${{ needs.bronze-ingestion.result }}"
          echo "Silver Layer: ${{ needs.silver-processing.result }}"
          
          # Overall status - both layers must succeed for full pipeline success
          if [[ "${{ needs.bronze-ingestion.result }}" == "success" && "${{ needs.silver-processing.result }}" == "success" ]]; then
            echo "✅ Full pipeline completed successfully!"
            echo "summary=success" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Pipeline failed!"
            echo "summary=failure" >> $GITHUB_OUTPUT
            # Here you could add Slack/Discord/email notifications
          fi
