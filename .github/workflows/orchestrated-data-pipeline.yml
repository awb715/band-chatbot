name: üéõÔ∏è Orchestrated Data Pipeline

on:
  schedule:
    # Run daily at 2 AM UTC (Bronze), 2:30 AM UTC (Silver), 3 AM UTC (Gold)
    - cron: '0 2 * * *'  # Bronze layer - Raw data ingestion
    - cron: '30 2 * * *' # Silver layer - Tabular processing  
    # - cron: '0 3 * * *'  # Gold layer - Analytics aggregation (disabled for now)

env:
  SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
  SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

jobs:
  # ============================================================================
  # JOB 1: BRONZE LAYER - Raw Data Ingestion
  # ============================================================================
  bronze-ingestion:
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.bronze-result.outputs.success }}
    steps:
      - name: ü•â Bronze Layer - Raw Data Ingestion
        id: bronze-result
        run: |
          echo "ü•â Starting Bronze layer processing..."
          
          # Call the existing ingest_raw_data function
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            -d '{"mode": "incremental"}' \
            "$SUPABASE_URL/functions/v1/ingest_raw_data")
          
          echo "Bronze layer response: $RESPONSE"
          
          # Check if successful
          if echo "$RESPONSE" | jq -e '.success == true' > /dev/null; then
            echo "‚úÖ Bronze layer completed successfully"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Bronze layer failed"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  # ============================================================================
  # JOB 2: SILVER LAYER - Tabular Processing
  # ============================================================================
  silver-processing:
    runs-on: ubuntu-latest
    needs: bronze-ingestion
    if: always() && needs.bronze-ingestion.result == 'success'
    outputs:
      success: ${{ steps.silver-result.outputs.success }}
    steps:
      - name: ü•à Silver Layer - Tabular Processing
        id: silver-result
        run: |
          echo "ü•à Starting Silver layer processing..."
          
          # Call the new process_tabular_data function for Silver only
          RESPONSE=$(curl -X POST \
            -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
            -H "Content-Type: application/json" \
            -d '{"mode": "silver_only"}' \
            "$SUPABASE_URL/functions/v1/process_tabular_data")
          
          echo "Silver layer response: $RESPONSE"
          
          # Check if successful
          if echo "$RESPONSE" | jq -e '.success == true' > /dev/null; then
            echo "‚úÖ Silver layer completed successfully"
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå Silver layer failed"
            echo "success=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  # ============================================================================
  # JOB 3: GOLD LAYER - Analytics Aggregation (disabled for now)
  # ============================================================================
  # gold-aggregation:
  #   runs-on: ubuntu-latest
  #   needs: silver-processing
  #   if: always() && needs.silver-processing.result == 'success'
  #   outputs:
  #     success: ${{ steps.gold-result.outputs.success }}
  #   steps:
  #     - name: ü•á Gold Layer - Analytics Aggregation
  #       id: gold-result
  #       run: |
  #         echo "ü•á Starting Gold layer processing..."
  #         
  #         # Call the new process_tabular_data function for Gold only
  #         RESPONSE=$(curl -X POST \
  #           -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
  #           -H "Content-Type: application/json" \
  #           -d '{"mode": "gold_only"}' \
  #           "$SUPABASE_URL/functions/v1/process_tabular_data")
  #         
  #         echo "Gold layer response: $RESPONSE"
  #         
  #         # Check if successful
  #         if echo "$RESPONSE" | jq -e '.success == true' > /dev/null; then
  #           echo "‚úÖ Gold layer completed successfully"
  #           echo "success=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "‚ùå Gold layer failed"
  #           echo "success=false" >> $GITHUB_OUTPUT
  #           exit 1
  #         fi

  # JOB 5: MONITORING & ALERTS
  # ============================================================================
  monitoring:
    runs-on: ubuntu-latest
    needs: [bronze-ingestion, silver-processing]
    if: always()
    steps:
      - name: üìä Pipeline Monitoring
        run: |
          echo "üìä Pipeline Status Summary:"
          echo "Bronze Layer: ${{ needs.bronze-ingestion.result }}"
          echo "Silver Layer: ${{ needs.silver-processing.result }}"
          # echo "Gold Layer: ${{ needs.gold-aggregation.result }}"  # disabled
          
          # Check if any layer failed
          if [[ "${{ needs.bronze-ingestion.result }}" == "failure" || 
                "${{ needs.silver-processing.result }}" == "failure" || 
                "${{ needs.gold-aggregation.result }}" == "failure" ]]; then
            echo "‚ö†Ô∏è One or more pipeline layers failed!"
            # Here you could add Slack/Discord/email notifications
          else
            echo "‚úÖ All pipeline layers completed successfully!"
          fi
